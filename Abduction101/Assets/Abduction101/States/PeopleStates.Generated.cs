//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abduction101
{
    
    
    public partial class PeopleStates
    {
        
        public static int Wandering = 0;
        
        public static int Wandering_Cooldown = 1;
        
        public static int Wandering_Timeout = 2;
        
        public static int Falling = 3;
        
        public static int Abducting = 4;
        
        public static int Knockback = 5;
        
        public static int Attacking = 6;
        
        public static int Spawning = 7;
        
        public static string ValueToName(int value)
        {
            if (value == Wandering) return nameof(Wandering);
            if (value == Wandering_Cooldown) return nameof(Wandering_Cooldown);
            if (value == Wandering_Timeout) return nameof(Wandering_Timeout);
            if (value == Falling) return nameof(Falling);
            if (value == Abducting) return nameof(Abducting);
            if (value == Knockback) return nameof(Knockback);
            if (value == Attacking) return nameof(Attacking);
            if (value == Spawning) return nameof(Spawning);
            return null;
        }
        
        public static void GetNames(int mask, System.Collections.Generic.ICollection<string> collection)
        {
            if ((mask & (1 << Wandering)) == (1 << Wandering)) collection.Add(nameof(Wandering));
            if ((mask & (1 << Wandering_Cooldown)) == (1 << Wandering_Cooldown)) collection.Add(nameof(Wandering_Cooldown));
            if ((mask & (1 << Wandering_Timeout)) == (1 << Wandering_Timeout)) collection.Add(nameof(Wandering_Timeout));
            if ((mask & (1 << Falling)) == (1 << Falling)) collection.Add(nameof(Falling));
            if ((mask & (1 << Abducting)) == (1 << Abducting)) collection.Add(nameof(Abducting));
            if ((mask & (1 << Knockback)) == (1 << Knockback)) collection.Add(nameof(Knockback));
            if ((mask & (1 << Attacking)) == (1 << Attacking)) collection.Add(nameof(Attacking));
            if ((mask & (1 << Spawning)) == (1 << Spawning)) collection.Add(nameof(Spawning));
        }
    }
}
